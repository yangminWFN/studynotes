一.JS基础
(1).script标签位置：应当放在body标签的尾标签前面
    原因：html页面加载是从html一直往下加载的，如果script标签在body标签前面，可能会让document.getElementById('id')
        等选择到的元素为null，因为加载完script标签前，还未加载到这些标签！！
    注意点：如果不包含defer,async等属性，script会按照在页面中的顺序进行加载！

(2).基本概念
    1.严格模式：'use strict';
    2.五种基本数据类型:Undefined,Null,Boolean,String,Number
    3.复杂类型：Object
    4.类型检查运算符：typeof  (可能值：'string','function','object','number','undefined','boolean')
    5.typeof null=='object' //true
    6.NaN与任何值都不相等，包括自身；用isNaN()判断一个变量是不是数值时会先尝试转换其类型为整型
    7.数值转换函数：Number(),parseInt(),parseFloat()
      注意点：Number(a)：(如果a是undefine、'abc'等字符串就会将其转化为NaN)
                        (如果a是'',false,null就会被转化为0)
                        (如果a是对象，就会调用valueOf()、toString()方法，然后将返回值按上述规则转换)

             parseInt(a):
                        原理：从左往右，找第一个不是空格的字符，如果不是数字或者符号就直接返回NaN，(parseInt(''):NaN)
                        如果前面是数字，则一直解析到第一个不是数字的字符就停止并返回.eg:(parseInt('123abc'):123)
                                                                              eg:    parseInt(22.5):22

             parseFloat:eg:parseFloat('123abc'):123
                            parseFloat('22.5.0'):22.5
                            parseFloat('0908.5'):908.5
                          !!parseFloat('3.14e10'):31400000000而parseInt('3.14e10'):3











二.面向对象程序设计

    1.对象属性的特征：可以用Object.defineProperty(对象,属性名,{configurable(可配置的),writable(值可修改),enumerable
(用for-in可循环到的属性),value(属性的值),get(访问器属性),set(访问器属性)});

    注意点：(1).如果configuratable为false,那么它将永远不能再被改成true。也再也不能对属性进行delete，或者配置之类操作。
           (2).如果将writable设为false之后,再用person.name='yangmin'之类的语句修改属性的值。
           以上都是非严格模式下不会报错，但是不会被修改。在严格模式下会报错。
           (3).设置属性的访问器属性，get，set，其默认值都是undefine。常见用法是设置一个属性的值，使另一个属性的值改变。
               (在属性前面加上下划线_age，表示要用对象方法访问的属性)
           (4).用Object.getOwnPropertyDescriptor(对象，属性名)，返回一个描述符对象。


